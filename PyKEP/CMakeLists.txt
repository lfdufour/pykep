SET(PYKEP_INSTALL_PATH ${PYTHON_MODULES_DIR}/PyKEP)

# Definitions needed for windows ... (using dlls)
ADD_DEFINITIONS(-DKEP_TOOL_DLL_EXPORT_API)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DYNAMIC_LIB_KEP_TOOL_USE_FLAGS}")

# Macro used for each module to select the correct extension according to the OS
MACRO(PYTHON_CPPMODULE arg1)
	SET_TARGET_PROPERTIES(${arg1} PROPERTIES PREFIX "")
	IF(PYDEXTENSION)
		SET_TARGET_PROPERTIES(${arg1} PROPERTIES SUFFIX ".pyd")
	ELSEIF(SOEXTENSION)
		SET_TARGET_PROPERTIES(${arg1} PROPERTIES SUFFIX ".so")
	ENDIF(PYDEXTENSION)
	TARGET_LINK_LIBRARIES(${arg1} ${LIBRARIES_4_PYTHON_MODULES} ${PYTHON_LIBRARY} ${ARGN})
	STRING(REGEX REPLACE "^_" "" DIR_ARG ${arg1})
	INSTALL(TARGETS ${arg1}
                RUNTIME DESTINATION ${PYKEP_INSTALL_PATH}/${DIR_ARG}
                LIBRARY DESTINATION ${PYKEP_INSTALL_PATH}/${DIR_ARG}
	)
ENDMACRO(PYTHON_CPPMODULE)

ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(sims_flanagan)
ADD_SUBDIRECTORY(orbit_plots)
ADD_SUBDIRECTORY(examples)
ADD_SUBDIRECTORY(trajopt)
ADD_SUBDIRECTORY(phasing)
ADD_SUBDIRECTORY(util)
ADD_SUBDIRECTORY(planet)

INSTALL(FILES __init__.py DESTINATION ${PYKEP_INSTALL_PATH})

